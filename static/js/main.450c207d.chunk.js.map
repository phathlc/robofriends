{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robotCards","robots","map","user","index","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","event","setState","searchfield","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EApBE,SAAC,GAAgB,IAE3BC,EAF0B,EAAbC,OAEOC,KAAI,SAACC,EAAMC,GACpC,OACC,cAAC,EAAD,CAEAT,GAAIQ,EAAKR,GACTF,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,OAHPU,MAQP,OACC,8BACGJ,KCHUK,EAbG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,8BACE,uBACEV,UAAU,mCACVW,KAAK,OACLC,YAAY,gBACZC,SAAUH,OCEHI,EATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,YC+CEC,G,wDA7Cb,aAAe,IAAD,8BACZ,gBAcFX,eAAiB,SAACY,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHtC,MAAK,SAACuC,GAAD,OAAcA,EAASC,UAC5BxC,MAAK,SAACyC,GAAD,OAAW,EAAKR,SAAS,CAAElB,OAAQ0B,S,oBAQ7C,WACE,MAAgCC,KAAKL,MAA7BtB,EAAR,EAAQA,OAAQmB,EAAhB,EAAgBA,YACVS,EAAiB5B,EAAO6B,QAAO,SAAAC,GACnC,OAEEA,EAAMtC,KAAKuC,cAAcC,SAASb,EAAYY,gBAAkBD,EAAMrC,MAAMsC,cAAcC,SAASb,EAAYY,kBAInH,OAAK/B,EAAOiC,OAKR,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,eAAgBsB,KAAKtB,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUL,OAAQ4B,SARjB,6C,GA/BKM,IAAMC,Y,MCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.450c207d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt=\"Robots\" src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\n\tconst robotCards = robots.map((user, index) => {\n\t\treturn (\n\t\t\t<Card \n\t\t\tkey={index} \n\t\t\tid={user.id} \n\t\t\tname={user.name} \n\t\t\temail={user.email} \n\t\t\t/>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t{ robotCards }\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ onSearchChange }) => {\n  return (\n    <div>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='text' \n        placeholder='search robots' \n        onChange={onSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\n  return (\n    <div style={{ overflowY: 'scroll', border: '2px solid black', height: '600px'}} >\n      {props.children}\n    </div>\n  ); \n};\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n    // this.setState({ robots : robots })\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  }\n  \n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return (\n        // filtered by name or email\n        robot.name.toLowerCase().includes(searchfield.toLowerCase()) || robot.email.toLowerCase().includes(searchfield.toLowerCase())\n      )\n    });\n\n    if (!robots.length) {\n      return <h1>Loading</h1>;\n    \n    } else {\n      return (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox onSearchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n    }\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}